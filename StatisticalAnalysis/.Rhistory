Iterations = as.numeric(Iterations),
Loop = as.factor(Loop),
Group = as.factor(Group)
)
# Plot using ggstatsplot
ggstatsplot::ggbetweenstats(
data = data,
x = Loop,                # grouping variable (Loop type)
y = Iterations,          # numeric variable
grouping.var = Group,    # the experiment type
type = "parametric",     # or "nonparametric" depending on distribution
pairwise.comparisons = TRUE,  # show pairwise stats
p.adjust.method = "bonferroni",
plot.type = "box",       # boxplots (can also use "violin")
ggtheme = ggplot2::theme_minimal(),
title = "Iterations required for learning per loop type"
)
ggstatsplot::ggbetweenstats(
data = data,
x = Group,            # now x = experiment type (SIM, EXO1, EXO2)
y = Iterations,       # numeric variable
grouping.var = Loop,  # facet by loop type
type = "parametric",  # or "nonparametric"
pairwise.comparisons = TRUE,
p.adjust.method = "bonferroni",
plot.type = "violin", # violin plots
ggtheme = ggplot2::theme_minimal(),
title = "Iterations required for learning per loop type",
messages = FALSE
)
# --- Motor loop plot ---
data_motor <- data %>% filter(Loop == "Motor")
ggstatsplot::ggbetweenstats(
data = data_motor,
x = Group,             # experiment type
y = Iterations,
type = "parametric",   # or "nonparametric"
pairwise.comparisons = TRUE,
p.adjust.method = "bonferroni",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Motor Loop: Iterations required for learning"
)
# --- Premotor loop plot ---
data_premotor <- data %>% filter(Loop == "Premotor")
ggstatsplot::ggbetweenstats(
data = data_premotor,
x = Group,
y = Iterations,
type = "parametric",
pairwise.comparisons = TRUE,
p.adjust.method = "bonferroni",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Premotor Loop: Iterations required for learning"
)
View(all_data)
View(data)
View(all_data)
View(data_motor)
View(data_premotor)
View(motor)
View(data_motor)
data <- data %>%
mutate(
Iterations = as.numeric(Iterations),
Loop = as.factor(Loop),
)
# --- Motor loop plot ---
data_motor <- data %>% filter(Loop == "Motor")
data <- read_excel("01_Exp_BG_Training_Iterations.xlsx")
data <- data %>%
mutate(
Iterations = as.numeric(Iterations),
Loop = as.factor(Loop),
GroupNameOrdered = factor(GroupName, levels = GroupName[order(Group)])
)
# --- Motor loop plot ---
data_motor <- data %>% filter(Loop == "Motor")
ggstatsplot::ggbetweenstats(
data = data_motor,
x = GroupNameOrdered,             # experiment type
y = Iterations,
type = "parametric",   # or "nonparametric"
pairwise.comparisons = TRUE,
p.adjust.method = "bonferroni",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Motor Loop: Iterations required for learning"
)
# --- Premotor loop plot ---
data_premotor <- data %>% filter(Loop == "Premotor")
ggstatsplot::ggbetweenstats(
data = data_premotor,
x = GroupNameOrdered,
y = Iterations,
type = "parametric",
pairwise.comparisons = TRUE,
p.adjust.method = "bonferroni",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Premotor Loop: Iterations required for learning"
)
data <- read_excel("01_Exp_BG_Training_Iterations.xlsx")
data <- data %>%
mutate(
Iterations = as.numeric(Iterations),
Loop = as.factor(Loop),
GroupNameOrdered = factor(GroupName, levels = GroupName[order(Group)])
)
GroupNameOrdered = factor(GroupName, levels = unique(GroupName[order(Group)])
GroupNameOrdered = factor(GroupName, levels = unique(GroupName[order(Group)])
data <- data %>%
mutate(
Iterations = as.numeric(Iterations),
Loop = as.factor(Loop),
GroupNameOrdered = factor(GroupName, levels = unique(GroupName[order(Group)]))
)
# --- Motor loop plot ---
data_motor <- data %>% filter(Loop == "Motor")
ggstatsplot::ggbetweenstats(
data = data_motor,
x = GroupNameOrdered,             # experiment type
y = Iterations,
type = "parametric",   # or "nonparametric"
pairwise.comparisons = TRUE,
p.adjust.method = "bonferroni",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Motor Loop: Iterations required for learning"
)
# --- Premotor loop plot ---
data_premotor <- data %>% filter(Loop == "Premotor")
# --- Premotor loop plot ---
data_premotor <- data %>% filter(Loop == "Premotor")
ggstatsplot::ggbetweenstats(
data = data_premotor,
x = GroupNameOrdered,
y = Iterations,
type = "parametric",
pairwise.comparisons = TRUE,
p.adjust.method = "bonferroni",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Premotor Loop: Iterations required for learning"
)
data <- data %>%
mutate(
Iterations = as.numeric(Iterations),
Loop = as.factor(Loop),
GroupNameOrdered = factor(GroupName, levels = unique(GroupName[order(Group)])),
GroupNamePlot = gsub(" \\(", "\n(", as.character(GroupNameOrdered))
)
# --- Motor loop plot ---
data_motor <- data %>% filter(Loop == "Motor")
ggstatsplot::ggbetweenstats(
data = data_motor,
x = GroupNamePlot,             # experiment type
y = Iterations,
type = "parametric",   # or "nonparametric"
pairwise.comparisons = TRUE,
p.adjust.method = "bonferroni",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Motor Loop: Iterations required for learning"
)
# --- Premotor loop plot ---
data_premotor <- data %>% filter(Loop == "Premotor")
ggstatsplot::ggbetweenstats(
data = data_premotor,
x = GroupNamePlot,
y = Iterations,
type = "parametric",
pairwise.comparisons = TRUE,
p.adjust.method = "bonferroni",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Premotor Loop: Iterations required for learning"
)
data <- data %>%
mutate(
Iterations = as.numeric(Iterations),
Loop = as.factor(Loop),
GroupNamePlot = gsub(" \\(", "\n(", as.character(GroupName)),
GroupNameOrdered = factor(GroupName, levels = unique(GroupNamePlot[order(Group)]))
)
# --- Motor loop plot ---
data_motor <- data %>% filter(Loop == "Motor")
ggstatsplot::ggbetweenstats(
data = data_motor,
x = GroupNameOrdered,             # experiment type
y = Iterations,
type = "parametric",   # or "nonparametric"
pairwise.comparisons = TRUE,
p.adjust.method = "bonferroni",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Motor Loop: Iterations required for learning"
)
# --- Premotor loop plot ---
data_premotor <- data %>% filter(Loop == "Premotor")
data <- read_excel("01_Exp_BG_Training_Iterations.xlsx")
data <- data %>%
mutate(
Iterations = as.numeric(Iterations),
Loop = as.factor(Loop),
GroupNameOrdered = factor(GroupName, levels = unique(GroupName[order(Group)]))
)
# --- Motor loop plot ---
data_motor <- data %>% filter(Loop == "Motor")
ggstatsplot::ggbetweenstats(
data = data_motor,
x = GroupNameOrdered,             # experiment type
y = Iterations,
type = "parametric",   # or "nonparametric"
pairwise.comparisons = TRUE,
p.adjust.method = "bonferroni",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Motor Loop: Iterations required for learning"
)
data <- read_excel("01_Exp_BG_Training_Iterations.xlsx")
data <- data %>%
mutate(
Iterations = as.numeric(Iterations),
Loop = as.factor(Loop),
GroupNameOrdered = factor(GroupName, levels = unique(GroupName[order(Group)])),
GroupNameOrdered = gsub(" \\(", "\n(", as.character(GroupNameOrdered))
)
# --- Motor loop plot ---
data_motor <- data %>% filter(Loop == "Motor")
ggstatsplot::ggbetweenstats(
data = data_motor,
x = GroupNameOrdered,             # experiment type
y = Iterations,
type = "parametric",   # or "nonparametric"
pairwise.comparisons = TRUE,
p.adjust.method = "bonferroni",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Motor Loop: Iterations required for learning"
)
# --- Premotor loop plot ---
data_premotor <- data %>% filter(Loop == "Premotor")
ggstatsplot::ggbetweenstats(
data = data_premotor,
x = GroupNameOrdered,
y = Iterations,
type = "parametric",
pairwise.comparisons = TRUE,
p.adjust.method = "bonferroni",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Premotor Loop: Iterations required for learning"
)
data <- read_excel("01_Exp_BG_Training_Iterations.xlsx")
data <- data %>%
mutate(
Iterations = as.numeric(Iterations),
Loop = as.factor(Loop),
GroupNameLabel = gsub(" \\(", "\n(", GroupName),
GroupNameOrdered = factor(GroupNameLabel, levels = unique(GroupNameLabel[order(Group)]))
)
# --- Motor loop plot ---
data_motor <- data %>% filter(Loop == "Motor")
ggstatsplot::ggbetweenstats(
data = data_motor,
x = GroupNameOrdered,             # experiment type
y = Iterations,
type = "parametric",   # or "nonparametric"
pairwise.comparisons = TRUE,
p.adjust.method = "bonferroni",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Motor Loop: Iterations required for learning"
)
# --- Premotor loop plot ---
data_premotor <- data %>% filter(Loop == "Premotor")
ggstatsplot::ggbetweenstats(
data = data_premotor,
x = GroupNameOrdered,
y = Iterations,
type = "parametric",
pairwise.comparisons = TRUE,
p.adjust.method = "bonferroni",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Premotor Loop: Iterations required for learning"
)
ggstatsplot::ggbetweenstats(
data = data_motor,
x = GroupNameOrdered,             # experiment type
y = Iterations,
type = "parametric",   # or "nonparametric"
pairwise.comparisons = False,
p.adjust.method = "bonferroni",
plot.type = "violin",
xlab = NULL,
ggtheme = ggplot2::theme_minimal(),
title = "Motor Loop: Iterations required for learning"
)
ggstatsplot::ggbetweenstats(
data = data_motor,
x = GroupNameOrdered,             # experiment type
y = Iterations,
type = "parametric",   # or "nonparametric"
pairwise.comparisons = False,
p.adjust.method = "bonferroni",
plot.type = "violin",
xlab = NULL,
ggtheme = ggplot2::theme_minimal(),
title = "Motor Loop: Iterations required for learning"
)
ggstatsplot::ggbetweenstats(
data = data_motor,
x = GroupNameOrdered,             # experiment type
y = Iterations,
type = "parametric",   # or "nonparametric"
pairwise.comparisons = FALSE,
plot.type = "violin",
xlab = NULL,
ggtheme = ggplot2::theme_minimal(),
title = "Motor Loop: Iterations required for learning"
)
ggstatsplot::ggbetweenstats(
data = data_motor,
x = GroupNameOrdered,             # experiment type
y = Iterations,
type = "parametric",   # or "nonparametric"
pairwise.comparisons = FALSE,
results.subtitle = FALSE,
plot.type = "violin",
xlab = NULL,
ggtheme = ggplot2::theme_minimal(),
title = "Motor Loop: Iterations required for learning"
)
ggstatsplot::ggbetweenstats(
data = data_motor,
x = GroupNameOrdered,             # experiment type
y = Iterations,
type = "parametric",   # or "nonparametric"
pairwise.comparisons = FALSE,
results.subtitle = FALSE,
messages = FALSE,
plot.type = "violin",
xlab = NULL,
ggtheme = ggplot2::theme_minimal(),
title = "Motor Loop: Iterations required for learning"
)
ggstatsplot::ggbetweenstats(
data = data_premotor,
x = GroupNameOrdered,
y = Iterations,
type = "parametric",
pairwise.comparisons = TRUE,
p.adjust.method = "bonferroni",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Premotor Loop: Iterations required for learning"
)
ggstatsplot::ggbetweenstats(
data = data_premotor,
x = GroupNameOrdered,
y = Iterations,
type = "parametric",
pairwise.comparisons = TRUE,
results.subtitle = FALSE,
p.adjust.method = "bonferroni",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Premotor Loop: Iterations required for learning"
)
ggstatsplot::ggbetweenstats(
data = data_premotor,
x = GroupNameOrdered,
y = Iterations,
type = "parametric",
pairwise.comparisons = TRUE,
results.subtitle = FALSE,
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Premotor Loop: Iterations required for learning"
)
ggstatsplot::ggbetweenstats(
data = data_premotor,
x = GroupNameOrdered,
y = Iterations,
type = "parametric",
pairwise.comparisons = FALSE,
results.subtitle = FALSE,
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Premotor Loop: Iterations required for learning"
)
ggstatsplot::ggbetweenstats(
data = data_premotor,
x = GroupNameOrdered,
y = Iterations,
type = "parametric",
pairwise.comparisons = FALSE,
results.subtitle = FALSE,
ggstatsplot.layer = FALSE # removes the ggstatsplot-added layers like subtitles
plot.type = "violin",
ggstatsplot::ggbetweenstats(
data = data_premotor,
x = GroupNameOrdered,
y = Iterations,
type = "parametric",
pairwise.comparisons = FALSE,
results.subtitle = FALSE,
ggstatsplot.layer = FALSE, # removes the ggstatsplot-added layers like subtitles
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Premotor Loop: Iterations required for learning"
)
ggstatsplot::ggbetweenstats(
data = data_premotor,
x = GroupNameOrdered,
y = Iterations,
type = "parametric",
results.subtitle = FALSE,
pairwise.display = "none",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Premotor Loop: Iterations required for learning"
)
ggstatsplot::ggbetweenstats(
data = data_premotor,
x = GroupNameOrdered,
y = Iterations,
type = "parametric",
results.subtitle = FALSE,
pairwise.display = "none",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Premotor Loop: Iterations required for learning"
)+
labs(
x = "none"
)
ggstatsplot::ggbetweenstats(
data = data_premotor,
x = GroupNameOrdered,
y = Iterations,
type = "parametric",
results.subtitle = FALSE,
pairwise.display = "none",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Premotor Loop: Iterations required for learning"
)+
labs(
x = NULL
)
ggstatsplot::ggbetweenstats(
data = data_motor,
x = GroupNameOrdered,             # experiment type
y = Iterations,
type = "parametric",   # or "nonparametric"
results.subtitle = FALSE,
pairwise.display = "none",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Motor Loop: Iterations required for learning"
) + labs(x = NULL)
# --- Premotor loop plot ---
data_premotor <- data %>% filter(Loop == "Premotor")
ggstatsplot::ggbetweenstats(
data = data_premotor,
x = GroupNameOrdered,
y = Iterations,
type = "parametric",
results.subtitle = FALSE,
pairwise.display = "none",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Premotor Loop: Iterations required for learning"
) + labs(x = NULL)
data <- read_excel("01_Exp_BG_Training_Iterations.xlsx")
data <- data %>%
mutate(
Iterations = as.numeric(Iterations),
Loop = as.factor(Loop),
GroupNameLabel = gsub(" \\(", "\n(", GroupName),
GroupNameOrdered = factor(GroupNameLabel, levels = unique(GroupNameLabel[order(Group)]))
)
# --- Motor loop plot ---
data_motor <- data %>% filter(Loop == "Motor")
ggstatsplot::ggbetweenstats(
data = data_motor,
x = GroupNameOrdered,             # experiment type
y = Iterations,
type = "parametric",   # or "nonparametric"
results.subtitle = FALSE,
pairwise.display = "none",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Motor Loop: Iterations required for learning"
) + labs(x = NULL)
# --- Premotor loop plot ---
data_premotor <- data %>% filter(Loop == "Premotor")
ggstatsplot::ggbetweenstats(
data = data_premotor,
x = GroupNameOrdered,
y = Iterations,
type = "parametric",
results.subtitle = FALSE,
pairwise.display = "none",
plot.type = "violin",
ggtheme = ggplot2::theme_minimal(),
title = "Premotor Loop: Iterations required for learning"
) + labs(x = NULL)
